server:
  port: 9999


spring.application.name: auth-server

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 30
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 8

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

# security.oauth2.authorizationserver.jwt.enabled: false

---
spring:
  profiles: docker
  
  jpa:
    generate-ddl: true
    show-sql: true
    database: POSTGRESQL
    hibernate:
      ddl-auto: update
    properties:
      hibernate.jdbc.lob.non_contextual_creation: true
      
  datasource:
    platform: postgres
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://auth-database:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    initialization-mode: always
    
app:
 eureka-server: eureka

---

spring:
  profiles: localtest
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    show-sql: true
    database: H2
    hibernate:
      ddl-auto: update

  datasource:
    platform: h2
    url: jdbc:h2:mem:testdb;MODE=MYSQL
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: false
